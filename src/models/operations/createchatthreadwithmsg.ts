/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type CreateChatThreadWithMsgRequestBody = {
  /**
   * The ID of the brain to associate with the chat
   */
  brainId: string;
  /**
   * The name of the chat
   */
  name: string;
  /**
   * The initial message to start the chat
   */
  message: string;
};

/** @internal */
export const CreateChatThreadWithMsgRequestBody$inboundSchema: z.ZodType<
  CreateChatThreadWithMsgRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  brain_id: z.string(),
  name: z.string(),
  message: z.string(),
}).transform((v) => {
  return remap$(v, {
    "brain_id": "brainId",
  });
});

/** @internal */
export type CreateChatThreadWithMsgRequestBody$Outbound = {
  brain_id: string;
  name: string;
  message: string;
};

/** @internal */
export const CreateChatThreadWithMsgRequestBody$outboundSchema: z.ZodType<
  CreateChatThreadWithMsgRequestBody$Outbound,
  z.ZodTypeDef,
  CreateChatThreadWithMsgRequestBody
> = z.object({
  brainId: z.string(),
  name: z.string(),
  message: z.string(),
}).transform((v) => {
  return remap$(v, {
    brainId: "brain_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateChatThreadWithMsgRequestBody$ {
  /** @deprecated use `CreateChatThreadWithMsgRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateChatThreadWithMsgRequestBody$inboundSchema;
  /** @deprecated use `CreateChatThreadWithMsgRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateChatThreadWithMsgRequestBody$outboundSchema;
  /** @deprecated use `CreateChatThreadWithMsgRequestBody$Outbound` instead. */
  export type Outbound = CreateChatThreadWithMsgRequestBody$Outbound;
}
