/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const ReviewModel = {
  Gpt35Turbo: "gpt-3.5-turbo",
  Claude3Haiku: "claude-3-haiku",
} as const;
export type ReviewModel = ClosedEnum<typeof ReviewModel>;

export const FinalModel = {
  Gpt35Turbo: "gpt-3.5-turbo",
  Gpt4: "gpt-4",
  ClaudeInstant1: "claude-instant-1",
  Claude2: "claude-2",
  Claude3Haiku: "claude-3-haiku",
  Claude3Sonnet: "claude-3-sonnet",
  Claude3Opus: "claude-3-opus",
  Mixtral: "mixtral",
  MistralSmall: "mistral-small",
  MistralMedium: "mistral-medium",
  MistralLarge: "mistral-large",
} as const;
export type FinalModel = ClosedEnum<typeof FinalModel>;

export type CreateDocumentReviewRequestBody = {
  message?: string | undefined;
  brainId?: string | undefined;
  documentId?: string | undefined;
  reviewModel?: ReviewModel | undefined;
  finalModel?: FinalModel | undefined;
  activeReadingInstructions?: string | undefined;
};

/** @internal */
export const ReviewModel$inboundSchema: z.ZodNativeEnum<typeof ReviewModel> = z
  .nativeEnum(ReviewModel);

/** @internal */
export const ReviewModel$outboundSchema: z.ZodNativeEnum<typeof ReviewModel> =
  ReviewModel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReviewModel$ {
  /** @deprecated use `ReviewModel$inboundSchema` instead. */
  export const inboundSchema = ReviewModel$inboundSchema;
  /** @deprecated use `ReviewModel$outboundSchema` instead. */
  export const outboundSchema = ReviewModel$outboundSchema;
}

/** @internal */
export const FinalModel$inboundSchema: z.ZodNativeEnum<typeof FinalModel> = z
  .nativeEnum(FinalModel);

/** @internal */
export const FinalModel$outboundSchema: z.ZodNativeEnum<typeof FinalModel> =
  FinalModel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FinalModel$ {
  /** @deprecated use `FinalModel$inboundSchema` instead. */
  export const inboundSchema = FinalModel$inboundSchema;
  /** @deprecated use `FinalModel$outboundSchema` instead. */
  export const outboundSchema = FinalModel$outboundSchema;
}

/** @internal */
export const CreateDocumentReviewRequestBody$inboundSchema: z.ZodType<
  CreateDocumentReviewRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
  brain_id: z.string().optional(),
  document_id: z.string().optional(),
  review_model: ReviewModel$inboundSchema.optional(),
  final_model: FinalModel$inboundSchema.optional(),
  active_reading_instructions: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "brain_id": "brainId",
    "document_id": "documentId",
    "review_model": "reviewModel",
    "final_model": "finalModel",
    "active_reading_instructions": "activeReadingInstructions",
  });
});

/** @internal */
export type CreateDocumentReviewRequestBody$Outbound = {
  message?: string | undefined;
  brain_id?: string | undefined;
  document_id?: string | undefined;
  review_model?: string | undefined;
  final_model?: string | undefined;
  active_reading_instructions?: string | undefined;
};

/** @internal */
export const CreateDocumentReviewRequestBody$outboundSchema: z.ZodType<
  CreateDocumentReviewRequestBody$Outbound,
  z.ZodTypeDef,
  CreateDocumentReviewRequestBody
> = z.object({
  message: z.string().optional(),
  brainId: z.string().optional(),
  documentId: z.string().optional(),
  reviewModel: ReviewModel$outboundSchema.optional(),
  finalModel: FinalModel$outboundSchema.optional(),
  activeReadingInstructions: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    brainId: "brain_id",
    documentId: "document_id",
    reviewModel: "review_model",
    finalModel: "final_model",
    activeReadingInstructions: "active_reading_instructions",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDocumentReviewRequestBody$ {
  /** @deprecated use `CreateDocumentReviewRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateDocumentReviewRequestBody$inboundSchema;
  /** @deprecated use `CreateDocumentReviewRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateDocumentReviewRequestBody$outboundSchema;
  /** @deprecated use `CreateDocumentReviewRequestBody$Outbound` instead. */
  export type Outbound = CreateDocumentReviewRequestBody$Outbound;
}
