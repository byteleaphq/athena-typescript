/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type DeleteChatThreadRequest = {
  chatId: string;
};

/** @internal */
export const DeleteChatThreadRequest$inboundSchema: z.ZodType<
  DeleteChatThreadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  chat_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "chat_id": "chatId",
  });
});

/** @internal */
export type DeleteChatThreadRequest$Outbound = {
  chat_id: string;
};

/** @internal */
export const DeleteChatThreadRequest$outboundSchema: z.ZodType<
  DeleteChatThreadRequest$Outbound,
  z.ZodTypeDef,
  DeleteChatThreadRequest
> = z.object({
  chatId: z.string(),
}).transform((v) => {
  return remap$(v, {
    chatId: "chat_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteChatThreadRequest$ {
  /** @deprecated use `DeleteChatThreadRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteChatThreadRequest$inboundSchema;
  /** @deprecated use `DeleteChatThreadRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteChatThreadRequest$outboundSchema;
  /** @deprecated use `DeleteChatThreadRequest$Outbound` instead. */
  export type Outbound = DeleteChatThreadRequest$Outbound;
}
