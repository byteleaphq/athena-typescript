/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type Users = {
  /**
   * Remaining credits in the day
   */
  credits: number;
  /**
   * Daily credits which the user gets
   */
  dailyCredits: number;
  /**
   * Email of the User
   */
  email: string;
  /**
   * They subscription plan the user has
   */
  planName: string;
  /**
   * ID of the user
   */
  userId: string;
  /**
   * First name of the User
   */
  firstName: string;
  /**
   * Last name of the User
   */
  lastName: string;
};

export type GetTenantAdminUsersResponseBody = {
  users: Array<Users>;
};

/** @internal */
export const Users$inboundSchema: z.ZodType<Users, z.ZodTypeDef, unknown> = z
  .object({
    credits: z.number().int(),
    daily_credits: z.number().int(),
    email: z.string(),
    plan_name: z.string(),
    user_id: z.string(),
    first_name: z.string(),
    last_name: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "daily_credits": "dailyCredits",
      "plan_name": "planName",
      "user_id": "userId",
      "first_name": "firstName",
      "last_name": "lastName",
    });
  });

/** @internal */
export type Users$Outbound = {
  credits: number;
  daily_credits: number;
  email: string;
  plan_name: string;
  user_id: string;
  first_name: string;
  last_name: string;
};

/** @internal */
export const Users$outboundSchema: z.ZodType<
  Users$Outbound,
  z.ZodTypeDef,
  Users
> = z.object({
  credits: z.number().int(),
  dailyCredits: z.number().int(),
  email: z.string(),
  planName: z.string(),
  userId: z.string(),
  firstName: z.string(),
  lastName: z.string(),
}).transform((v) => {
  return remap$(v, {
    dailyCredits: "daily_credits",
    planName: "plan_name",
    userId: "user_id",
    firstName: "first_name",
    lastName: "last_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Users$ {
  /** @deprecated use `Users$inboundSchema` instead. */
  export const inboundSchema = Users$inboundSchema;
  /** @deprecated use `Users$outboundSchema` instead. */
  export const outboundSchema = Users$outboundSchema;
  /** @deprecated use `Users$Outbound` instead. */
  export type Outbound = Users$Outbound;
}

/** @internal */
export const GetTenantAdminUsersResponseBody$inboundSchema: z.ZodType<
  GetTenantAdminUsersResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  users: z.array(z.lazy(() => Users$inboundSchema)),
});

/** @internal */
export type GetTenantAdminUsersResponseBody$Outbound = {
  users: Array<Users$Outbound>;
};

/** @internal */
export const GetTenantAdminUsersResponseBody$outboundSchema: z.ZodType<
  GetTenantAdminUsersResponseBody$Outbound,
  z.ZodTypeDef,
  GetTenantAdminUsersResponseBody
> = z.object({
  users: z.array(z.lazy(() => Users$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTenantAdminUsersResponseBody$ {
  /** @deprecated use `GetTenantAdminUsersResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetTenantAdminUsersResponseBody$inboundSchema;
  /** @deprecated use `GetTenantAdminUsersResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetTenantAdminUsersResponseBody$outboundSchema;
  /** @deprecated use `GetTenantAdminUsersResponseBody$Outbound` instead. */
  export type Outbound = GetTenantAdminUsersResponseBody$Outbound;
}
