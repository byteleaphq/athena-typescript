/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type PostIntegrationIntegrationNameDisconnectRequest = {
  /**
   * Currently supported integrations are "notion" and "confluence". More integrations will be added in the future.
   */
  integrationName: string;
};

/**
 * Empty object
 */
export type PostIntegrationIntegrationNameDisconnectResponseBody = {};

/** @internal */
export const PostIntegrationIntegrationNameDisconnectRequest$inboundSchema:
  z.ZodType<
    PostIntegrationIntegrationNameDisconnectRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    integration_name: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "integration_name": "integrationName",
    });
  });

/** @internal */
export type PostIntegrationIntegrationNameDisconnectRequest$Outbound = {
  integration_name: string;
};

/** @internal */
export const PostIntegrationIntegrationNameDisconnectRequest$outboundSchema:
  z.ZodType<
    PostIntegrationIntegrationNameDisconnectRequest$Outbound,
    z.ZodTypeDef,
    PostIntegrationIntegrationNameDisconnectRequest
  > = z.object({
    integrationName: z.string(),
  }).transform((v) => {
    return remap$(v, {
      integrationName: "integration_name",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostIntegrationIntegrationNameDisconnectRequest$ {
  /** @deprecated use `PostIntegrationIntegrationNameDisconnectRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostIntegrationIntegrationNameDisconnectRequest$inboundSchema;
  /** @deprecated use `PostIntegrationIntegrationNameDisconnectRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostIntegrationIntegrationNameDisconnectRequest$outboundSchema;
  /** @deprecated use `PostIntegrationIntegrationNameDisconnectRequest$Outbound` instead. */
  export type Outbound =
    PostIntegrationIntegrationNameDisconnectRequest$Outbound;
}

/** @internal */
export const PostIntegrationIntegrationNameDisconnectResponseBody$inboundSchema:
  z.ZodType<
    PostIntegrationIntegrationNameDisconnectResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PostIntegrationIntegrationNameDisconnectResponseBody$Outbound = {};

/** @internal */
export const PostIntegrationIntegrationNameDisconnectResponseBody$outboundSchema:
  z.ZodType<
    PostIntegrationIntegrationNameDisconnectResponseBody$Outbound,
    z.ZodTypeDef,
    PostIntegrationIntegrationNameDisconnectResponseBody
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostIntegrationIntegrationNameDisconnectResponseBody$ {
  /** @deprecated use `PostIntegrationIntegrationNameDisconnectResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostIntegrationIntegrationNameDisconnectResponseBody$inboundSchema;
  /** @deprecated use `PostIntegrationIntegrationNameDisconnectResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostIntegrationIntegrationNameDisconnectResponseBody$outboundSchema;
  /** @deprecated use `PostIntegrationIntegrationNameDisconnectResponseBody$Outbound` instead. */
  export type Outbound =
    PostIntegrationIntegrationNameDisconnectResponseBody$Outbound;
}
