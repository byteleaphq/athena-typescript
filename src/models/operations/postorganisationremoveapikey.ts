/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type PostOrganisationRemoveApiKeyRequestBody = {
  /**
   * API key to delete
   */
  apiKey: string;
};

export type PostOrganisationRemoveApiKeyApiKeys = {
  apiKey?: string | undefined;
  name?: string | undefined;
};

export type PostOrganisationRemoveApiKeyResponseBody = {
  apiKeys: Array<PostOrganisationRemoveApiKeyApiKeys>;
  createdAt: string;
  email: string;
  id: number;
  name: string;
  orgUuid: string;
  token?: any | null | undefined;
};

/** @internal */
export const PostOrganisationRemoveApiKeyRequestBody$inboundSchema: z.ZodType<
  PostOrganisationRemoveApiKeyRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  api_key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "api_key": "apiKey",
  });
});

/** @internal */
export type PostOrganisationRemoveApiKeyRequestBody$Outbound = {
  api_key: string;
};

/** @internal */
export const PostOrganisationRemoveApiKeyRequestBody$outboundSchema: z.ZodType<
  PostOrganisationRemoveApiKeyRequestBody$Outbound,
  z.ZodTypeDef,
  PostOrganisationRemoveApiKeyRequestBody
> = z.object({
  apiKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    apiKey: "api_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostOrganisationRemoveApiKeyRequestBody$ {
  /** @deprecated use `PostOrganisationRemoveApiKeyRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostOrganisationRemoveApiKeyRequestBody$inboundSchema;
  /** @deprecated use `PostOrganisationRemoveApiKeyRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostOrganisationRemoveApiKeyRequestBody$outboundSchema;
  /** @deprecated use `PostOrganisationRemoveApiKeyRequestBody$Outbound` instead. */
  export type Outbound = PostOrganisationRemoveApiKeyRequestBody$Outbound;
}

/** @internal */
export const PostOrganisationRemoveApiKeyApiKeys$inboundSchema: z.ZodType<
  PostOrganisationRemoveApiKeyApiKeys,
  z.ZodTypeDef,
  unknown
> = z.object({
  api_key: z.string().optional(),
  name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "api_key": "apiKey",
  });
});

/** @internal */
export type PostOrganisationRemoveApiKeyApiKeys$Outbound = {
  api_key?: string | undefined;
  name?: string | undefined;
};

/** @internal */
export const PostOrganisationRemoveApiKeyApiKeys$outboundSchema: z.ZodType<
  PostOrganisationRemoveApiKeyApiKeys$Outbound,
  z.ZodTypeDef,
  PostOrganisationRemoveApiKeyApiKeys
> = z.object({
  apiKey: z.string().optional(),
  name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    apiKey: "api_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostOrganisationRemoveApiKeyApiKeys$ {
  /** @deprecated use `PostOrganisationRemoveApiKeyApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PostOrganisationRemoveApiKeyApiKeys$inboundSchema;
  /** @deprecated use `PostOrganisationRemoveApiKeyApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PostOrganisationRemoveApiKeyApiKeys$outboundSchema;
  /** @deprecated use `PostOrganisationRemoveApiKeyApiKeys$Outbound` instead. */
  export type Outbound = PostOrganisationRemoveApiKeyApiKeys$Outbound;
}

/** @internal */
export const PostOrganisationRemoveApiKeyResponseBody$inboundSchema: z.ZodType<
  PostOrganisationRemoveApiKeyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  api_keys: z.array(
    z.lazy(() => PostOrganisationRemoveApiKeyApiKeys$inboundSchema),
  ),
  created_at: z.string(),
  email: z.string(),
  id: z.number().int(),
  name: z.string(),
  org_uuid: z.string(),
  token: z.nullable(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    "api_keys": "apiKeys",
    "created_at": "createdAt",
    "org_uuid": "orgUuid",
  });
});

/** @internal */
export type PostOrganisationRemoveApiKeyResponseBody$Outbound = {
  api_keys: Array<PostOrganisationRemoveApiKeyApiKeys$Outbound>;
  created_at: string;
  email: string;
  id: number;
  name: string;
  org_uuid: string;
  token?: any | null | undefined;
};

/** @internal */
export const PostOrganisationRemoveApiKeyResponseBody$outboundSchema: z.ZodType<
  PostOrganisationRemoveApiKeyResponseBody$Outbound,
  z.ZodTypeDef,
  PostOrganisationRemoveApiKeyResponseBody
> = z.object({
  apiKeys: z.array(
    z.lazy(() => PostOrganisationRemoveApiKeyApiKeys$outboundSchema),
  ),
  createdAt: z.string(),
  email: z.string(),
  id: z.number().int(),
  name: z.string(),
  orgUuid: z.string(),
  token: z.nullable(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    apiKeys: "api_keys",
    createdAt: "created_at",
    orgUuid: "org_uuid",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostOrganisationRemoveApiKeyResponseBody$ {
  /** @deprecated use `PostOrganisationRemoveApiKeyResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostOrganisationRemoveApiKeyResponseBody$inboundSchema;
  /** @deprecated use `PostOrganisationRemoveApiKeyResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostOrganisationRemoveApiKeyResponseBody$outboundSchema;
  /** @deprecated use `PostOrganisationRemoveApiKeyResponseBody$Outbound` instead. */
  export type Outbound = PostOrganisationRemoveApiKeyResponseBody$Outbound;
}
