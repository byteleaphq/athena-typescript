/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type UpdateBrainRequestBody = {
  /**
   * Updated name of the brain
   */
  name: string;
};

export type UpdateBrainRequest = {
  brainId: string;
  requestBody?: UpdateBrainRequestBody | undefined;
};

/** @internal */
export const UpdateBrainRequestBody$inboundSchema: z.ZodType<
  UpdateBrainRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type UpdateBrainRequestBody$Outbound = {
  name: string;
};

/** @internal */
export const UpdateBrainRequestBody$outboundSchema: z.ZodType<
  UpdateBrainRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateBrainRequestBody
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBrainRequestBody$ {
  /** @deprecated use `UpdateBrainRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateBrainRequestBody$inboundSchema;
  /** @deprecated use `UpdateBrainRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateBrainRequestBody$outboundSchema;
  /** @deprecated use `UpdateBrainRequestBody$Outbound` instead. */
  export type Outbound = UpdateBrainRequestBody$Outbound;
}

/** @internal */
export const UpdateBrainRequest$inboundSchema: z.ZodType<
  UpdateBrainRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  brain_id: z.string(),
  RequestBody: z.lazy(() => UpdateBrainRequestBody$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "brain_id": "brainId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateBrainRequest$Outbound = {
  brain_id: string;
  RequestBody?: UpdateBrainRequestBody$Outbound | undefined;
};

/** @internal */
export const UpdateBrainRequest$outboundSchema: z.ZodType<
  UpdateBrainRequest$Outbound,
  z.ZodTypeDef,
  UpdateBrainRequest
> = z.object({
  brainId: z.string(),
  requestBody: z.lazy(() => UpdateBrainRequestBody$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    brainId: "brain_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBrainRequest$ {
  /** @deprecated use `UpdateBrainRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateBrainRequest$inboundSchema;
  /** @deprecated use `UpdateBrainRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateBrainRequest$outboundSchema;
  /** @deprecated use `UpdateBrainRequest$Outbound` instead. */
  export type Outbound = UpdateBrainRequest$Outbound;
}
